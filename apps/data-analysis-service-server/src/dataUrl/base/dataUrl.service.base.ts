/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DataUrl as PrismaDataUrl } from "@prisma/client";

export class DataUrlServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DataUrlCountArgs, "select">): Promise<number> {
    return this.prisma.dataUrl.count(args);
  }

  async dataUrls<T extends Prisma.DataUrlFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataUrlFindManyArgs>
  ): Promise<PrismaDataUrl[]> {
    return this.prisma.dataUrl.findMany<Prisma.DataUrlFindManyArgs>(args);
  }
  async dataUrl<T extends Prisma.DataUrlFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataUrlFindUniqueArgs>
  ): Promise<PrismaDataUrl | null> {
    return this.prisma.dataUrl.findUnique(args);
  }
  async createDataUrl<T extends Prisma.DataUrlCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataUrlCreateArgs>
  ): Promise<PrismaDataUrl> {
    return this.prisma.dataUrl.create<T>(args);
  }
  async updateDataUrl<T extends Prisma.DataUrlUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataUrlUpdateArgs>
  ): Promise<PrismaDataUrl> {
    return this.prisma.dataUrl.update<T>(args);
  }
  async deleteDataUrl<T extends Prisma.DataUrlDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataUrlDeleteArgs>
  ): Promise<PrismaDataUrl> {
    return this.prisma.dataUrl.delete(args);
  }
}
