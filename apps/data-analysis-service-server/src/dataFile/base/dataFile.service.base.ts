/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DataFile as PrismaDataFile } from "@prisma/client";

export class DataFileServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DataFileCountArgs, "select">): Promise<number> {
    return this.prisma.dataFile.count(args);
  }

  async dataFiles<T extends Prisma.DataFileFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataFileFindManyArgs>
  ): Promise<PrismaDataFile[]> {
    return this.prisma.dataFile.findMany<Prisma.DataFileFindManyArgs>(args);
  }
  async dataFile<T extends Prisma.DataFileFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataFileFindUniqueArgs>
  ): Promise<PrismaDataFile | null> {
    return this.prisma.dataFile.findUnique(args);
  }
  async createDataFile<T extends Prisma.DataFileCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataFileCreateArgs>
  ): Promise<PrismaDataFile> {
    return this.prisma.dataFile.create<T>(args);
  }
  async updateDataFile<T extends Prisma.DataFileUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataFileUpdateArgs>
  ): Promise<PrismaDataFile> {
    return this.prisma.dataFile.update<T>(args);
  }
  async deleteDataFile<T extends Prisma.DataFileDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataFileDeleteArgs>
  ): Promise<PrismaDataFile> {
    return this.prisma.dataFile.delete(args);
  }
}
